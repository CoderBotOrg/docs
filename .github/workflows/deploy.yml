# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Build and publish docs to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            dist
          key: ${{ runner.os }}-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Install dependencies
        run: npm ci
      - name: Static HTML export with VitePress
        run: |
          npm run docs:build
          ls -l ./docs/.vitepress/dist
          tar czf ./docs.tgz -C ./docs/.vitepress/dist .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: ${{ contains( github.ref_name, 'rc') }}
          prerelease: false
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/.vitepress/dist
      - name: Upload built docs to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload_info.outputs.upload_url }}
          asset_path: docs.tgz
          asset_name: docs.tgz
          asset_content_type: application/gzip

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url:  ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
